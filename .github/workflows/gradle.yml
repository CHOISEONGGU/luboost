# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    #- name: Build with Gradle
    #  uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
    #  with:
    #    arguments: build
    - name: Grant execute permission to Gradlew
      run: chmod +x gradlew

    - name: Build and Package with Gradle
      run: ./gradlew bootJar

    - name: build and package with google
      run: cp build/libs/*.jar app.jar

    - name: docker hub login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Image build and push to docker hub
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/luboost:1.0 -f Dockerfile .
        docker push ${{ secrets.DOCKER_USERNAME }}/luboost:1.0

    #- name: Delete the image that pushed on docker hub
    #  run: docker rmi -f ${{ secrets.DOCKER_USERNAME }}/luboost:1.0

    - name: Init container
      run: docker run -d --name boost ${{ secrets.DOCKER_USERNAME }}/luboost:1.0
